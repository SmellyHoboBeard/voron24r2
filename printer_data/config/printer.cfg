[include shell_command.cfg]
[include fluidd.cfg]
[include ebbcan.cfg]
[include stealthburner_leds.cfg]
[include led_progress.cfg]
[include homing_macros.cfg]
[include macros.cfg]
[include timelapse.cfg]

[virtual_sdcard]
path: /home/jason/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[skew_correction]

[input_shaper]
shaper_freq_x: 66.6 # center frequency for the X axis filter
shaper_type_x: mzv # filter type for the X axis
shaper_freq_y: 36.6 # center frequency for the Y axis filter
shaper_type_y: mzv # filter type for the Y axis
damping_ratio_x: .050 # damping ratio for the X axis
damping_ratio_y: .056 # damping ratio for the Y axis

[exclude_object]

[mcu]
canbus_uuid: d963f334aa08

[printer]
kinematics: corexy
max_velocity: 700
max_accel: 10000             #Max 4000
max_z_velocity: 100          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 1000
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PC13
dir_pin: PC14
enable_pin: !PE6
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
# endstop_pin: PF0
position_min: 0
position_endstop: 350
position_max: 350
endstop_pin: tmc2209_stepper_x:virtual_endstop 
homing_speed: 45
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PG14
diag_pin: PF0
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
driver_SGTHRS: 80

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PE4
dir_pin: PE5
enable_pin: !PE3
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
position_endstop: 350
position_max: 350
endstop_pin: tmc2209_stepper_y:virtual_endstop 
homing_speed: 45
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PG13
diag_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
driver_SGTHRS: 85
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PE1
dir_pin: !PE0
enable_pin: !PE2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
# endstop_pin: ebbcan:gpio24
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
position_max: 310
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PG12
# diag_pin: PF4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PB8
dir_pin: PB9
enable_pin: !PB7
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PG11
##diag_pin: PF3
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PB5
dir_pin: !PB4
enable_pin: !PB6
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PG10
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PG15
dir_pin: PB3
enable_pin: !PD5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PG9
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Extruder
#####################################################################

##  Installed on CANBUS toolhead

#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
heater_pin: PA0
sensor_pin: PB1 # TB
sensor_type: Generic 3950
# sensor_pin: PF3
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 1
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

[verify_heater heater_bed]
check_gain_time: 120
#####################################################################
#   Probe - CANBUS Toolhead
#####################################################################

[probe]
pin: !EBBCan:gpio24
x_offset: 0
y_offset: 0
#z_offset: 0 ## CONFIGURE THIS WITH THE Z CALIBRATE TOOL
speed: 10.0
lift_speed: 25
samples: 3
samples_result: average
sample_retract_dist: 2
samples_tolerance: 0.05
samples_tolerance_retries: 10
activate_gcode:
    {% set PROBE_TEMP = 220 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    

#####################################################################
#   Fan Control
#####################################################################

# ##  Print Cooling Fan - FAN0
# [fan]
# pin: PA6
# kick_start_time: 0.5
# ##  Depending on your fan, you may need to increase this value
# ##  if your fan will not start. Can change cycle_time (increase)
# ##  if your fan is not able to slow down effectively
# off_below: 0.10


##  Hotend Fan - FAN1
# [heater_fan hotend_fan]
# pin: PE5
# max_power: 1.0
# kick_start_time: 0.5
# heater: extruder
# heater_temp: 50.0
# ##  If you are experiencing back flow, you can reduce fan_speed
# #fan_speed: 1.0

##  Controller fan - FAN2
[controller_fan left_bay_fans]
pin: PA6
shutdown_speed: 0.0
kick_start_time: 0.5
stepper: stepper_x,stepper_y
idle_timeout: 10
idle_speed: .25

##  Exhaust fan - FAN3
[controller_fan right_bay_fans]
pin: PA5
#max_power: 1.0
shutdown_speed: 0.0
kick_start_time: .5
stepper: stepper_x,stepper_y
idle_timeout: 10
idle_speed: .25
#heater_temp: 60
#fan_speed: 1.0

# [fan_generic Exhaust]
# pin: PF6
# kick_start_time: 0.5

# [temperature_sensor chamber]
# sensor_type: Generic 3950
# sensor_pin: PC4
# max_temp:100
# gcode_id: C

[temperature_fan chamber]
pin: PF6
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
cycle_time:0.01
off_below:0.1
sensor_type: Generic 3950
sensor_pin: PC4
min_temp: 0
max_temp: 100
target_temp: 35.0
control: watermark
gcode_id: C

[gcode_macro M141]
gcode:
    {% set s = params.S|default(0)|float %}
    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={s}


[fan_generic BedFans]
pin: PF7 #HE3 - FAR RIGHT
kick_start_time: 0.5

#####################################################################
#   LED Control
#####################################################################

# [neopixel led_bar1]
# pin: PE10
# chain_count: 8

[neopixel led_bar]
pin: PE9
chain_count: 8

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions

[quad_gantry_level]
gantry_corners:
  -60,-10
  410,420
points:
  25,25
  25,325
  300,325
  300,25
speed: 150
horizontal_move_z: 10
retries: 20
retry_tolerance: 0.09
max_adjust: 20

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # FPC header, Aliases EXP1 & EXP2 for mini12864
    EXP1_1=PG2, EXP1_2=PD15,
    EXP1_3=PD14, EXP1_4=PD13,
    EXP1_5=PD12, EXP1_6=PD11,
    EXP1_7=PD10, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PG5, EXP2_4=PE11,
    EXP2_5=PG4, EXP2_6=PE14,
    EXP2_7=PG3, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>

#####################################################################
#   Displays
#####################################################################

#  mini12864 LCD Display
# [display]
# lcd_type: uc1701
# cs_pin: EXP1_3
# a0_pin: EXP1_4
# rst_pin: EXP1_5
# encoder_pins: ^EXP2_5, ^EXP2_3
# click_pin: ^!EXP1_2
# contrast: 63
# spi_software_miso_pin: EXP2_1
# spi_software_mosi_pin: EXP2_6
# spi_software_sclk_pin: EXP2_2

#  To control Neopixel RGB in mini12864 display
# [neopixel btt_mini12864]
# pin: EXP1_6
# chain_count: 3
# initial_RED: 0.1
# initial_GREEN: 0.5
# initial_BLUE: 0.0
# color_order: RGB

#  Set RGB values on boot up for each Neopixel. 
#  Index 1 = display, Index 2 and 3 = Knob
# [delayed_gcode setdisplayneopixel]
# initial_duration: 1
# gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

[force_move]
enable_force_move: True # Allows a user to move the z axis down if they have no other means of homing Z and need to calibrate the Eddy.

[bed_mesh]
horizontal_move_z: 5
speed: 300
mesh_min: 15,30 
mesh_max: 330, 320
probe_count: 5, 5
algorithm: bicubic

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
# keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
# timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 60.589
#*# pid_ki = 2.244
#*# pid_kd = 408.977
#*#
#*# [extruder]
#*# pid_kp = 35.527
#*# pid_ki = 13.157
#*# pid_kd = 23.981
#*#
#*# [probe]
#*# z_offset = -0.310
#*#
#*# [skew_correction CaliFlower]
#*# xy_skew = 0.0007005956980641524
#*# xz_skew = 0.0
#*# yz_skew = 0.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.158750, -0.409167, -0.983750, -1.602500, -2.113750
#*# 	  0.637917, 0.047500, -0.553750, -1.163750, -1.684167
#*# 	  1.124583, 0.547083, -0.031667, -0.637083, -1.224167
#*# 	  1.637083, 1.037500, 0.465417, -0.115000, -0.747500
#*# 	  2.146667, 1.617083, 1.063333, 0.436667, -0.192083
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 330.0
#*# min_y = 30.0
#*# max_y = 320.0
